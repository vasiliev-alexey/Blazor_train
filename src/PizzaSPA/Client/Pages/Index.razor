@page "/"
@using System.ComponentModel.Design
@using PizzaSPA.Shared

<h1>Магазин Пиццы</h1>

@* Новое приложене на Blazor *@

<div class="d-flex flex-column">

    <PizzaList Title="Our selected list of pizzas"
               Menu="@State.Menu"
               Selected="@((pizza) => AddToBasket(pizza))"/>


</div>
<!-- В корзине заказов-->
<ShoppingBasket Title="Your current order"
                Basket="@State.Basket"
                GetPizzaFromId="@State.Menu.GetPizza"
                Selected="@(pos => RemoveFromBasket(pos))" />


<!-- Данные о клиенте -->

<h1>Данные о клиенте</h1>
<fieldset class="d-flex flex-column">
    <p>
        <label for="name">Имя:</label>
        <input id="name" @bind="@State.Basket.Customer.Name" />

        @if (State.Basket.Customer.GetErrors(nameof(Customer.Name)).Any())
        {
        <ul class="validation-error">
            @foreach (var error in State.Basket.Customer.GetErrors(nameof(Customer.Name)))
            {
                    <li>@error></li>
            }
        </ul>
        }

    </p>
    <p>
        <label for="street">Улица:</label>
        <input id="street" @bind="@State.Basket.Customer.Street" />
               @if (State.Basket.Customer.GetErrors(nameof(Customer.Street)).Any())
               {
                   <ul class="validation-error">
                       @foreach (var error in State.Basket.Customer.GetErrors(nameof(Customer.Street)))
                       {
                           <li>@error></li>
                       }
                   </ul>
               }
    </p>
    <p>
        <label for="city">Город:</label>
        <input id="city" @bind="@State.Basket.Customer.City" />
               @if (State.Basket.Customer.GetErrors(nameof(Customer.City)).Any())
               {
                   <ul class="validation-error">
                       @foreach (var error in State.Basket.Customer.GetErrors(nameof(Customer.City)))
                       {
                           <li>@error></li>
                       }
                   </ul>
               }
    </p>


</fieldset>

@if (State.Basket.Orders.Any())
{
    <button class="btn btn-info" @onclick="@PlaceOrder">Разместить заказ</button>
}

@if (debug)
{
    <p>@State.ToJson()</p>
}


@functions
                                            {
    private bool debug =
#if DEBUG
        true;
#else
    false;
#endif


    private State State { get; } =
        new State
        {
            Menu = new Menu
            {
                Pizzas = new List<Pizza>
                {
                                                                new Pizza(1, @"Пипперони", 500, Spiciness.Spicy),
                                                                new Pizza(2, "Маргарита", 600, Spiciness.Hot),
                                                                new Pizza(3, "Диабло", 700, Spiciness.Hot)
                    }
            }
        };

    private string SpicinessImage(Spiciness spiciness)
    {
        return $"images/{spiciness.ToString().ToLower()}.png";
    }

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Added pizza to basket {pizza.Name}");
        State.Basket.Add(pizza.Id);
        StateHasChanged();
    }

    private void RemoveFromBasket(int pos)
    {
        Console.WriteLine($"Removed pizza from basket at pos {pos}");
        State.Basket.Remove(pos);
        StateHasChanged();
    }

    private void PlaceOrder()
    {
        Console.WriteLine("Заказ размещен");

    }

}
